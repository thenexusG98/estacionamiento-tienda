name: Publicar release de estacionamiento

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-22.04
    env:
      TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}

    steps:
      - name: Clona el repositorio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # Necesario para poder crear y subir tags

      # AUTOTAG: Lee la versión de package.json y crea/sube el tag si no existe
      - name: Lee versión de package.json
        id: version
        run: |
          VERSION=$(jq -r .version package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Configura git para push autenticado
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Crea tag si no existe
        run: |
          if git rev-parse "v$VERSION" >/dev/null 2>&1; then
            echo "El tag v$VERSION ya existe, no se crea uno nuevo."
          else
            git config user.name "thenexusG98"
            git config user.email "capitanuri@gmail.com"
            git tag "v$VERSION"
            git push origin "v$VERSION"
            echo "Tag v$VERSION creado y subido."
          fi

      - name: Instala dependencias de sistema para Tauri
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libjavascriptcoregtk-4.1-dev \
            libsoup-3.0-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            squashfs-tools \
            pkg-config

      - name: Instala Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Instala Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Limpieza profunda antes de instalar dependencias
      - name: Limpieza profunda de Rust y Node
        run: |
          cd src-tauri
          rm -rf target
          rm -f Cargo.lock
          cargo update
          cargo clean
          cd ..
          rm -rf node_modules

      - name: Instala dependencias de Node.js
        working-directory: src-tauri
        run: npm install

      - name: Instala Tauri CLI
        working-directory: src-tauri
        run: npm install -g @tauri-apps/cli

      - name: Debug TAURI_SIGNING_PRIVATE_KEY
        run: |
          if [ -z "$TAURI_SIGNING_PRIVATE_KEY" ]; then
            echo "TAURI_SIGNING_PRIVATE_KEY NO está presente. El secreto no fue leído."
            exit 1
          else
            echo "TAURI_SIGNING_PRIVATE_KEY está presente."
            head -n 2 <<< "$TAURI_SIGNING_PRIVATE_KEY"
          fi

      - name: Compila el instalador MSI (Tauri build)
        working-directory: src-tauri
        run: npm run tauri build

      - name: Genera latest.json con la versión del tag
        run: node scripts/generate-latest-json.js
        env:
          APP_VERSION: ${{ github.ref_name }}

      - name: Verifica archivos
        run: |
          ls -lh src-tauri/target/release/bundle/msi/ || true
          [ -f src-tauri/latest.json ] && cat src-tauri/latest.json || echo "No latest.json"

      - name: Sube archivos a GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/latest.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}